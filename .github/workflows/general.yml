# Reference:
# - https://gist.github.com/LukeMathWalker/5ae1107432ce283310c3e601fac915f3
# - https://github.com/fmsrodrigues/zero2prod/blob/main/.github/workflows/general.yaml

name: Rust
on: [ push, pull_request ]


env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.7.1
  SQLX_FEATURES: "rustls,postgres"

# A workflow run is made up of one or more jobs, which run in parallel by default
# Each job runs in a runner environment specified by runs-on
jobs:
  # Unique identifier of our job (`job_id`)
  test:
    # Sets the name `Test` for the job, which is displayed in the GitHub UI
    name: Test
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Service containers to run with the `test` container job
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:16
        # Environment variables scoped only for the `postgres` element
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        # When you map ports using the ports keyword, GitHub uses the --publish command to publish the container’s ports to the Docker host
        # Opens tcp port 5432 on the host and service container
        ports:
          - 5432:5432
      redis:
        image: redis:7
        ports:
          - 6379:6379
    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        # The uses keyword specifies that this step will run v3 of the actions/checkout action.
        # This is an action that checks out your repository onto the runner, allowing you to run scripts or other actions against your code (such as build and test tools).
        # You should use the checkout action any time your workflow will run against the repository's code.
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

        # This GitHub Action installs a Rust toolchain using rustup. It is designed for one-line concise usage and good defaults.
      - name: Install the Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      # A GitHub Action that implements smart caching for rust/cargo projects with sensible defaults.
      - name: Rust Cache Action
        uses: Swatinem/rust-cache@v2
        with:
          # An additional cache key that is added alongside the automatic `job`-based cache key and can be used to further differentiate jobs. default: empty
          # 日本語訳: 自動的に追加される`job`ベースのキャッシュキーに加えて、さらにジョブを区別するために使用できる追加のキャッシュキー。デフォルト：keyなし
          key: sqlx-${{ env.SQLX_VERSION }}

      - name: Install sqlx-cli
        run:
          cargo install sqlx-cli
          --version=${{ env.SQLX_VERSION }}
          --features ${{ env.SQLX_FEATURES }}
          --no-default-features
          --locked
        # The --locked flag can be used to force Cargo to use the packaged Cargo.lock file if it is available.
        # This may be useful for ensuring reproducible builds, to use the exact same set of dependencies that were available when the package was published.
        # It may also be useful if a newer version of a dependency is published that no longer builds on your system, or has other problems
      #      This should be done inside postgresql docker container psql command
      #      - name: Install postgresql-client
      #        run: sudo apt-get update && sudo apt-get install postgresql-client -y

      - name: Migrate database
        run: bash ./scripts/ci_init_db.sh

      - name: Run tests
        run: cargo test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Enforce formatting
        run: cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}
      - name: Install sqlx-cli
        run:
          cargo install sqlx-cli
          --version=${{ env.SQLX_VERSION }}
          --features ${{ env.SQLX_FEATURES }}
          --no-default-features
          --locked
      - name: Migrate database
        run: |
          bash ./scripts/ci_init_db.sh
      - name: Linting
        run: cargo clippy -- -D warnings

# temporary disabled
#  coverage:
#    name: Code coverage
#    runs-on: ubuntu-latest
#    container:
#      image: xd009642/tarpaulin
#      options: --security-opt seccomp=unconfined
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#      - name: Generate code coverage
#        run: |
#          cargo tarpaulin --verbose --workspace